//REFACTOR🎣/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//HEADER: 
//z02. take into account vertical-scroll-bar.
//z01. rewrite in grid.

//SMALL MENU:
//z01. refactor to flex.

//PICTURE & TEXT: 
//z02. load smaller image?
//z03. ratio not to cross so that `object-fit: cover` still looks good.

//FORM
//🧱do wrapping with CSS-GRID
//z01 space between title and 'take the tour', in mobile becomes too big.

//FOOTER:
//z01. magic number's used to determine when `section - justify-content: flex-start` on its `.wrapper` children is enacted.
//z03. profes website's border-top somehow correlates with size of content. You arbritrarily set it to 90%. (And it jumps to 100%). 
//z02. when grid, amend it so that it can cope, neatly, with a title (or, I suppose, 'entry') spanning 2+ lines and all 'cells' still being horizontally adjacent
//z04. make `section` take up full row under certain vw (like in profes websites). 

//ANIMATIONS: HEADER: 1. Underline menu-items. 2. Menu, in non-mobile mode, opens up from side.
//SCALING-FOR-A-BIG-SCREEN: 
//SAFARI: 
//RESETS/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
*, ::before, ::after {
    margin: 0;
    box-sizing: border-box;
    color: unset;//stops hyperlink appearing purple
}

#root {
    // min-width: var(--min-width-of-page);
}

h1, h2, h3, h4, h5, h6 {
    font-weight: initial;
}

h1, h2 {
    font-size: 1.5em;
    margin: 2rem 0;//0.83rem 0;
    text-align: center;
    font-weight: 700;
}

h1 {
    font-size: 2em;
}

h3 {
    font-size: 1.17em;
}

h4 {
    margin: 2em 0;//1.33em 0;
}

p {
    margin-bottom: var(--p-margin);
    text-align: center;
}

button {
    //all attributes added from Chrome user-agent-stylesheet.
    appearance: auto;
    -webkit-writing-mode: horizontal-tb !important;
    text-rendering: auto;
    letter-spacing: normal;
    word-spacing: normal;
    text-transform: none;
    text-indent: 0px;
    text-shadow: none;
    display: block;
    text-align: center;
    align-items: flex-start;
    cursor: default;
    box-sizing: border-box;
    margin: 0em;
    //of which I've changed (so I can use this semantic `button` tag)🧙‍♂️Is this even a good idea? I can't predict other/future user-agent stylsheets...
    color: initial;
    background-color: initial;
    font: initial;
    font-family: inherit;
    padding: initial;//1px 6px;
    border-width: initial;//2px;
    border-style: initial;//outset;
    border-color: initial;
    border-image: initial;
    //particular to this project:
    background-color: var(--dark-blue); color: white;
    padding: calc( 0.5 * var(--p-margin)) calc( 2 * var(--p-margin));
    border-radius: var(--arbitrarily-large-number);
}

input[type="submit" i] {
    appearance: auto;
    user-select: none;
    white-space: pre;
    align-items: flex-start;
    text-align: center;
    cursor: default;
    color: initial;
    background-color: initial;
    box-sizing: border-box;
    padding: initial;
    border-width: initial;
    border-style: initial;
    border-color: initial;
    border-image: initial;
}

@import url('https://fonts.googleapis.com/css2?family=Nunito:wght@600;700;800&display=swap');

html {
    //font
    font-family: 'Nunito', sans-serif;
    //colors
    --dark-blue: #001e50;
    --dark-blue-purple: #201b65;
    --orange: #e65019;
    --light-mint: #19e6a2;
    --light-blue: #00B1EB;
    --grey: #6a767d;
    --dark-grey: #3b4145;
    //dimensions
    --direct-descendants-of-main-max-width: 2000px;
    --min-width-of-page: 320px;
    //header
    --header-height: clamp(75px, 0.125 * var(--vh100), 5rem);
    --vw-suitable-for-small-menu: 700px;
    --hamburger-button-height: calc(2 * 1rem);//1.5
    --menu-button-width-dimension: 5em;
    --menu-button-horizontal-margin: 0.5em;
    --hf-border: solid var(--dark-blue) 2px;
    //p
    --p-margin: 1em;
    --min-character-width: 30ch; --max-character-width: 60ch;
    //misc 
    --golf-min-height: 350px;
    --arbitrarily-large-number: 1000000px;
}

$vw-suitable-for-small-menu: 700px;

img {
    object-fit: contain;
    width: 100%;
    height: 100%;
}

@mixin grid-container-template($column-value: 1fr, $row-value: 1fr) {
    display: grid;
    grid-template-columns: $column-value;
    grid-template-rows: $row-value;
}

@mixin grid-container-horizontally-and-vertically-center-GIs($column-value: 1fr, $row-value: 1fr) {
  @include grid-container-template($column-value, $row-value);
  place-items: center;
}
//STRUCTURAL/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
header {
    height: var(--header-height);
    @include grid-container-template(20% 40%, minmax(0, 1fr)); justify-content: end;
    > img {
        height: 100%;//var(--header-height);
    }
    > nav {
        // max-width: 700px;
        //FLEX
        display: flex; 
        align-items: center;
        // justify-content: space-evenly; 
        //GRID
        // @include grid-container-horizontally-and-vertically-center-GIs(repeat(3, 1fr), 1fr);//need minmax value here: `repeat(3, minmax(auto, 150px)), 1fr`
        // justify-content: center;
        > * {
            flex-basis: 0px;
            flex-grow: 1;
            text-align: center;
        }
    }
    @media screen and (max-width: $vw-suitable-for-small-menu) {//any way to have original CSS (`nav`) so that it positions 'menu' correctly?🧙‍♂️
        > nav {
            @include grid-container-horizontally-and-vertically-center-GIs(auto, 1fr);
            justify-content: end;
        }
    }
    border-bottom: var(--hf-border);
    #menu-button {
        margin: 0 var(--menu-button-horizontal-margin);
        height: var(--hamburger-button-height);
        width: var(--menu-button-width-dimension);
    }
}

#small-menu {
    min-height: var(--vh100);
    background-color: var(--dark-blue); color: white;
    @include grid-container-horizontally-and-vertically-center-GIs(auto, var(--header-height) repeat(3, 1fr) var(--header-height));
    > * {
        height: var(--header-height);
        @include grid-container-horizontally-and-vertically-center-GIs(auto, auto);
    }
    > *:first-child {
        justify-self: end;
        align-self: start;
        #exit-image {
            margin: 0 var(--menu-button-horizontal-margin);
            height: var(--hamburger-button-height);
            width: var(--menu-button-width-dimension);
            color: initial; filter: invert(100%) sepia(0%) saturate(0%) hue-rotate(105deg) brightness(110%) contrast(101%);
        }
    }
}

main { 
    min-height: calc(var(--vh100) - var(--header-height) - var(--footer-height));
    >* {
        max-width: var(--direct-descendants-of-main-max-width); margin: 0 auto;
    }
    #picture-text-container {
        --percentage-of-image: 55%;
        --margin-between-vertical-item-edges-and-container: calc(2 * var(--p-margin));
        --max-height-of-GIs: 200px;
        display: flex; flex-wrap: wrap;
        width: 100vw; //max-height: 600px;
        // align-items: center;//great 'back-up value' in case text increases (massively)
        margin-bottom: 2rem;
        > * {
            flex-grow: 1;
        }
        > img {
            object-fit: cover;
            width: var(--percentage-of-image);//calc(max(500px, var(--percentage-of-image)));
            height: auto;
            min-height: 400px;//var(--golf-min-height);
            max-height: 500px;
            background-color: var(--dark-blue);
            @media screen and (min-width: 1200px) {
                // object-fit: contain;
                object-position: 50% 70%;
            }
        }
        > div {
            width: calc(max(35ch, 100% - var(--percentage-of-image)));//max-height: 600px;
            // @include grid-container-horizontally-and-vertically-center-GIs(auto, repeat(3, auto)); //align-content: end;
            display: flex; flex-wrap: wrap; justify-content: center; align-content: center;
            >* {
                flex-basis: var(--arbitrarily-large-number);
                max-width: var(--max-character-width);
                margin-left: calc(1 * var(--p-margin));
                margin-right: calc(1 * var(--p-margin));
            }
            .button-container {
                margin-top: calc(1 * var(--p-margin));
                button {
                    margin: 0 auto;
                }
            }
            p:first-child {
                margin-top: var(--margin-between-vertical-item-edges-and-container);
            }
            >*:last-child {
                margin-bottom: var(--margin-between-vertical-item-edges-and-container);
                @media screen and (max-width: 745px) {
                    // margin-bottom: 1rem;
                }
            }
        }
    }
    #form-container {
        max-width: 800px;//🧙‍♂️reasonable scanning limitation
        margin-bottom: 1rem;
        // padding-top: 2rem;
        // border-top: solid 1px var(--dark-blue); //border: solid 1px var(--dark-blue); 
        // border-bottom: solid 1px var(--dark-blue); //border: solid 1px var(--dark-blue); 
        h1 {
            margin-top: 0;
        }
        form {
            // width: calc(min(850px, 90%));
            margin: 0 auto;// 1rem auto;
            display: flex; flex-wrap: wrap; justify-content: center; //align-items: center;
            @media screen and (max-width: 720px) {
                // justify-content: flex-start;
                max-width: 300px;
                //GRID
            }
            > * {
                margin: 0 0.5em 1em 0.5em;
                // flex-basis: var(--arbitrarily-large-number);
            }
            button {
                background-color: var(--orange);
            }
        }
    }
    #scroll-bar-test {
        background-color: orange;
        width: calc(100vw - (100vw - 100%));
    }
}

footer {
    width: calc(min(850px, 90%)); 
    margin: 0 auto; 
    display: flex; flex-wrap: wrap; 
    //GRID
    // @include grid-container-horizontally-and-vertically-center-GIs(repeat(3, 1fr), auto); column-gap: 2em;
    // align-items: start;
    >* {
        flex-basis: 0px;
        flex-grow: 1;
        padding: 0 2em;
        //FLEX
        display: flex; justify-content: center;
        @media screen and (max-width: 400px) {//🧙‍♂️arbitrary number
            justify-content: flex-start;
        }
        //GRID
        // display: grid; justify-content: center;//🧙‍♂️if applying this, sol.i) need a magic-num break-point where you stop centering content of sections sol.ii) 
        // @media screen and (max-width: 400px) {
        //     justify-content: initial;
        // }
        h4 {
            font-weight: 800;
        }
        p {
            font-size: 14px;
            color: var(--dark-blue-purple);
            text-align: initial;
        }
    }
    border-top: var(--hf-border);
    padding-bottom: 1em;
    @media screen and (max-width: $vw-suitable-for-small-menu) {
        width: 100%;
    }
}