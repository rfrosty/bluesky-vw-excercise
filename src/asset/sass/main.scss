//REFACTOR🎣/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//PICTURE & TEXT: 1. when the image has (a larger) min-width  - is there min&max width&height values we want to apply to the img? (further helps this #picture-text-container wrap). 
//z) load smaller image? z2) ratio not to cross so that `object-fit: cover` still looks good.

//HEADER: 

//FOOTER:
//z01. rewrite the whole thing in flex

//ANIMATIONS: HEADER: 1. Underline menu-items. 2. Menu, in non-mobile mode, opens up from side.
//SCALING-FOR-A-BIG-SCREEN: 
//RESETS/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
*, ::before, ::after {
    margin: 0;
    box-sizing: border-box;
    color: unset;//stops hyperlink appearing purple
}

#root {
    min-width: var(--min-width-of-page);
}

h1, h2, h3, h4 {
    font-weight: initial;
}

h1, h2 {
    font-size: 1.5em;
}

h3 {
    font-size: 1.17em;
}

h4 {
    margin: 2em 0;//1.33em 0;
}

p {
    margin-bottom: var(--p-margin);
    text-align: center;
}

button {
    //all attributes added from Chrome user-agent-stylesheet.
    appearance: auto;
    -webkit-writing-mode: horizontal-tb !important;
    text-rendering: auto;
    letter-spacing: normal;
    word-spacing: normal;
    text-transform: none;
    text-indent: 0px;
    text-shadow: none;
    display: inline-block;
    text-align: center;
    align-items: flex-start;
    cursor: default;
    box-sizing: border-box;
    margin: 0em;
    //of which I've changed (so I can use this semantic `button` tag)🧙‍♂️Is this even a good idea? I can't predict other/future user-agent stylsheets...
    color: initial;
    background-color: initial;
    font: initial;
    font-family: inherit;
    padding: initial;//1px 6px;
    border-width: initial;//2px;
    border-style: initial;//outset;
    border-color: initial;
    border-image: initial;
}

@import url('https://fonts.googleapis.com/css2?family=Nunito:wght@600;700;800&display=swap');

html {
    //font
    font-family: 'Nunito', sans-serif;
    //colors
    --dark-blue: #001e50;
    --dark-blue-purple: #201b65;
    --light-blue: #00B1EB;
    --grey: #6a767d;
    --dark-grey: #3b4145;
    //dimensions
    --direct-descendants-of-main-max-width: 2150px;
    --min-width-of-page: 320px;
    //header
    --header-height: clamp(75px, 0.125 * var(--vh100), 5rem);
    --vw-suitable-for-small-menu: 700px;
    --hamburger-button-height: calc(1.5 * 1rem);
    --menu-button-width-dimension: 5em;
    --menu-button-horizontal-margin: 0.5em;
    --hf-border: solid var(--dark-blue) 2px;
    //p
    --p-margin: 1em;
    --min-character-width: 30ch; --max-character-width: 60ch;
    //misc 
    --golf-min-height: 350px;
    --arbitrarily-large-number: 1000000px;
}

$vw-suitable-for-small-menu: 700px;

img {
    object-fit: contain;
    width: 100%;
    height: 100%;
    min-width: 0;
    min-height: 0;
}

@mixin grid-container-template($column-value: 1fr, $row-value: 1fr) {
    display: grid;
    grid-template-columns: $column-value;
    grid-template-rows: $row-value;
}

@mixin grid-container-horizontally-and-vertically-center-GIs($column-value: 1fr, $row-value: 1fr) {
  @include grid-container-template($column-value, $row-value);
  place-items: center;
}

.hide-from-layout {
    display: none;
}
//STRUCTURAL/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
header {
    height: var(--header-height);
    @include grid-container-template(20% 40%); justify-content: end;
    > img {
        height: 100%;//var(--header-height);
    }
    > nav {
        @include grid-container-horizontally-and-vertically-center-GIs(repeat(3, minmax(auto, 150px)), 1fr);//need minmax value here
        justify-content: center;
    }
    @media screen and (max-width: $vw-suitable-for-small-menu) {//any way to have original CSS (`nav`) so that it positions 'menu' correctly?🧙‍♂️
        > nav {
            @include grid-container-horizontally-and-vertically-center-GIs(auto, 1fr);
            justify-content: end;
        }
    }
    border-bottom: var(--hf-border);
    #menu-button {
        margin: 0 var(--menu-button-horizontal-margin);
        height: var(--hamburger-button-height);
        width: var(--menu-button-width-dimension);
    }
}

#small-menu {
    height: var(--vh100);
    background-color: var(--dark-blue); color: white;
    @include grid-container-horizontally-and-vertically-center-GIs(auto, var(--header-height) repeat(3, 1fr) var(--header-height));
    > * {
        height: var(--header-height);
        @include grid-container-horizontally-and-vertically-center-GIs(auto, auto);
    }
    > *:first-child {
        justify-self: end;
        align-self: start;
        #exit-image {
            margin: 0 var(--menu-button-horizontal-margin);
            height: var(--hamburger-button-height);
            width: var(--menu-button-width-dimension);
            color: initial; filter: invert(100%) sepia(0%) saturate(0%) hue-rotate(105deg) brightness(110%) contrast(101%);
        }
    }
}

main { //if accounting for extremely wide-screens, `main` could have a max-width.
    min-height: calc(var(--vh100) - var(--header-height) - var(--footer-height));
    >* {
        max-width: var(--direct-descendants-of-main-max-width); margin: 0 auto;
    }
    #picture-text-container {
        --percentage-of-image: 55%;
        --margin-between-vertical-item-edges-and-container: calc(2 * var(--p-margin));
        --max-height-of-GIs: 200px;
        display: flex;
        width: 100vw; //max-height: 600px;
        flex-wrap: wrap;
        // align-items: center;//great 'back-up value' in case text increases (massively)
        > * {
            flex-grow: 1;
        }
        > img {
            object-fit: cover;
            width: var(--percentage-of-image);
            height: auto;
            min-height: var(--golf-min-height);//🧙‍♂️lucky that this isn't messing up the 0px value (in resets) that seemed to be required
            // max-height: 500px;
            background-color: var(--dark-blue);
            @media screen and (min-width: 1200px) {
                object-fit: contain;
            }
        }
        > div {
            width: calc(max(30ch, 100% - var(--percentage-of-image))); //max-height: 600px;
            @include grid-container-horizontally-and-vertically-center-GIs(auto, repeat(3, auto)); align-content: center;
            * {
                max-width: var(--max-character-width);
                margin-left: calc(1 * var(--p-margin));//🧙‍♂️ change to 2 or 3 (looks nicer) but figure out why it crops (horizontally) image harsher
                margin-right: calc(1 * var(--p-margin));
            }
            p:first-child {
                margin-top: var(--margin-between-vertical-item-edges-and-container);
            }
            button {
                background-color: var(--dark-blue); color: white;
                padding: calc( 0.5 * var(--p-margin)) calc( 2 * var(--p-margin));
                border-radius: var(--arbitrarily-large-number);
                margin-top: calc(1 * var(--p-margin));
            }
            >*:last-child {
                margin-bottom: var(--margin-between-vertical-item-edges-and-container);
            }
        }
    }
}

footer {
    width: calc(min(850px, 90%)); margin: 0 auto; 
    min-height: var(--footer-height);
    @include grid-container-horizontally-and-vertically-center-GIs(repeat(3, 1fr), auto);
    // justify-content: space-evenly;
    align-items: start;
    // text-align: center;
    >* {
        > h4 {
            font-weight: 800;
        }
        p {
            font-size: 14px;
            color: var(--dark-blue-purple);
            text-align: initial;
        }
    }
    border-top: var(--hf-border);
}